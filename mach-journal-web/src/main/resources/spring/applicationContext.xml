<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <description>Spring Configuration</description>
    <!-- **************************** Spring ******************************************* -->

    <!-- 开启组件自动扫描；使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
    <!-- base-package扫描包，如果多个，用“,”分隔 -->
    <context:component-scan base-package="com.mach.journal" />
    <!-- 扫描引入数据源配置文件 -->
    <context:property-placeholder location="classpath:project.properties" />

    <!--&lt;!&ndash; 注入dao.xml &ndash;&gt;-->
    <import resource="classpath:dao/dao.xml"/>
    <!--<import resource="classpath:rabbitmq/rabbitmq.xml"/>-->
    <import resource="classpath:redis/redis.xml"/>
    <!-- kafka相关 -->
    <!--<import resource="classpath:kafka/kafkaConsumer.xml" />-->
    <!--<import resource="classpath:kafka/kafkaProducer.xml" />-->
    <!--dubbo-->
    <import resource="classpath:dubbo/dubbo-provider.xml" />
    <import resource="classpath:dubbo/dubbo-consumer.xml" />

    <!-- **************************** SpringMVC *********************************************** -->
    <!-- 开启SpringMVC注解模式 -->
    <mvc:annotation-driven/>
    <!-- 静态资源(js、image等)的访问 -->
    <mvc:default-servlet-handler/>
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
    </bean>
</beans>